// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.kingsunsoft.sdk.modsdk;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class User {

	@TarsStructProperty(order = 0, isRequire = true)
	public long userId = 0L;
	@TarsStructProperty(order = 1, isRequire = true)
	public String account = "";
	@TarsStructProperty(order = 2, isRequire = false)
	public String name = "";
	@TarsStructProperty(order = 3, isRequire = false)
	public String avatarURL = "";

	public long getUserId() {
		return userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	public String getAccount() {
		return account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAvatarURL() {
		return avatarURL;
	}

	public void setAvatarURL(String avatarURL) {
		this.avatarURL = avatarURL;
	}

	public User() {
	}

	public User(long userId, String account, String name, String avatarURL) {
		this.userId = userId;
		this.account = account;
		this.name = name;
		this.avatarURL = avatarURL;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(userId);
		result = prime * result + TarsUtil.hashCode(account);
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(avatarURL);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof User)) {
			return false;
		}
		User other = (User) obj;
		return (
			TarsUtil.equals(userId, other.userId) &&
			TarsUtil.equals(account, other.account) &&
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(avatarURL, other.avatarURL) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(userId, 0);
		_os.write(account, 1);
		if (null != name) {
			_os.write(name, 2);
		}
		if (null != avatarURL) {
			_os.write(avatarURL, 3);
		}
	}


	public void readFrom(TarsInputStream _is) {
		this.userId = _is.read(userId, 0, true);
		this.account = _is.readString(1, true);
		this.name = _is.readString(2, false);
		this.avatarURL = _is.readString(3, false);
	}

}
